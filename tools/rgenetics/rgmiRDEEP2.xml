<tool name="miRDEEP2" id="mirdeep2" version="0.008">
  <description>Report miR</description>
  <command interpreter="python">
    rgmiRDEEP2.py --input_arf "$input_arf" --input_collapsedfasta "$input_collapsedfasta" --output_dir "$html_file.files_path" --outhtml "$html_file"
    --stackheight "$stackheight" --exe_dir "$GALAXY_DATA_INDEX_DIR/shared/mirdeep2" --species "$species" --minscore "$minscore" --maxprecursors "$maxprecursors"
    --Rfam "/data/genomes/miR18/Rfam.fa"  --jtitle "$jtitle" 
#if $maturemirSource.mmSource != "none":
  #if $maturemirSource.mmSource == "history":
--mir "$maturemirSource.index"
  #else:
--mir "${ filter( lambda x: str( x[0] ) == str( $maturemirSource.index ), $__app__.tool_data_tables[ 'mature_miR_fasta' ].get_fields() )[0][-1] }" 
  #end if
#end if
#if $precursormirSource.pmSource != "none":
 #if $precursormirSource.pmSource == "history":
--premir "$precursormirSource.index"
w #else:
--premir "${ filter( lambda x: str( x[0] ) == str( $precursormirSource.index ), $__app__.tool_data_tables[ 'hairpin_miR_fasta' ].get_fields() )[0][-1] }" 
 #end if
#end if
#if $relatedmirSource.rmSource != "none":
 #if $relatedmirSource.rmSource == "history":
--relatedmir "$relatedmirSource.index"
 #else:
--relatedmir "${ filter( lambda x: str( x[0] ) == str( $relatedmirSource.index ), $__app__.tool_data_tables[ 'mature_miR_fasta' ].get_fields() )[0][-1] }" 
 #end if
#end if
#if $starmir.value != "None":
--starmir "$starmir"
#end if
#if $genomeSource.refGenomeSource=="history":
--fasta "$genomeSource.index"
#else
--fasta "${ filter( lambda x: str( x[0] ) == str( $genomeSource.index ), $__app__.tool_data_tables[ 'all_fasta' ].get_fields() )[0][-1] }" 
#end if
$randfold $makeBed --outbed "$bed_file"
  </command>
  <requirements><requirement type="package">mirdeep2</requirement></requirements>
  <inputs>
    <param format="arf" name="input_arf" type="data" label="Input: arf short read data in your current history"
      help="Use the bam to arf converter to create this and the associated collapsedfasta file needed here from any BAM files in your history"/>
    <param format="collapsedfasta" name="input_collapsedfasta" type="data" label="Input: collapsed fasta format short read data in your current history"
      help="Use the bam to arf converter to create this and the associated arf file needed here from any BAM files in your history"/>
    <param name="species" type="select" lable="Species to use for generating ucsc links in outputs">
    <option value="Human">Human</option>
    <option value="Mouse">Mouse</option>
    <option value="Rat">Rat</option>
    </param>
    <param name="jtitle" value="miRDeep2" type="text" help="Use to describe the output" 
      label="History reminder - a title for the job" size="80" />
    <conditional name="genomeSource">
      <param name="refGenomeSource" type="select" help="This tool needs a reference genome. Default is usually right"
         label="Reference genome used in the original alignment - default, built-in or choose from current history">
        <option value="default" selected="true">Default - use the input data genome/build</option>
        <option value="indexed">Select a different built-in genome</option>
        <option value="history">Select a fasta reference genome from the current history</option>
      </param>
      <when value="default">
        <param name="index" type="select" label="Select a default reference genome">
          <options from_data_table="all_fasta">
          <filter type="data_meta" ref="input_arf" key="dbkey" column="dbkey" multiple="True" separator="," />
          <validator type="no_options" message="No reference build available for selected input" /> 
          </options>
        </param>
      </when>
      <when value="indexed">
        <param name="index" type="select" label="Select a built-in reference genome" >
          <options from_data_table="all_fasta">
          </options>
        </param>
      </when>
      <when value="history">
        <param name="index" type="data" format='fasta' label="Select a fasta reference genome from the current history" >
          <validator type="no_options" message="No fasta files found in your current history" /> 
        </param>
      </when>
    </conditional>
    <conditional name="maturemirSource">
      <param name="mmSource" type="select"
         label="Mature miR source - built-in or choose from current history">
        <option value="none">Do not use a mature miR source</option>
        <option value="indexed" selected="true">Select a built-in mature miR form fasta</option>
        <option value="history">Select a mature miR fasta file from the current history</option>
      </param>
      <when value="indexed">
        <param name="index" type="select" label="Select a built-in set of mature miR forms" >
          <options from_data_table="mature_miR_fasta">
          </options>
        </param>
      </when>
      <when value="history">
        <param name="index" type="data" format='fasta' label="Select a mature miR fasta from the current history" >
          <validator type="no_options" message="No fasta files found in your current history" /> 
        </param>
      </when>
    </conditional>
    <conditional name="precursormirSource">
      <param name="pmSource" type="select"
         label="Precursor miR source - built-in or choose from current history">
        <option value="none">Do not use a precursor miR source</option>
        <option value="indexed" selected="true">Select a built-in precursor miR fasta</option>
        <option value="history">Select a precursor miR fasta from the current history</option>
      </param>
      <when value="indexed">
        <param name="index" type="select" label="Select a built-in set of precursor (hairpin) miR forms" >
          <options from_data_table="hairpin_miR_fasta">
          </options>
        </param>
      </when>
      <when value="history">
        <param name="index" type="data" format='fasta' label="Select a precursor miR fasta from the current history" >
          <validator type="no_options" message="No fasta files found in your current history" /> 
        </param>
      </when>
    </conditional>
    <conditional name="relatedmirSource">
      <param name="rmSource" type="select"
         label="Related species miR source - built-in or choose from current history">
        <option value="none" selected="true">Do not use a related miR source</option>
        <option value="indexed">Select a built-in related organism miR form fasta</option>
        <option value="history">Select a related miR fasta from the current history</option>
      </param>
      <when value="indexed">
        <param name="index" type="select" label="Select a built-in set of related organism mature miR forms" >
          <options from_data_table="mature_miR_fasta">
          </options>
        </param>
      </when>
      <when value="history">
        <param name="index" type="data" format='fasta' label="Select a related organism mature miR fasta from the current history" >
          <validator type="no_options" message="No fasta files found in your current history" /> 
        </param>
      </when>
    </conditional>
    <param name="starmir" type="data" format='fasta' label="Select an optional fasta file of star form MIR sequences for the sample organism from the current history" optional="true"/>
    <param name="stackheight" value="0" type="integer" help="Leave as 0 (default) to allow automated selection of optimal value"
      label="minimum read stack height that triggers analysis. Setting this option > 0 disables automatic estimation of the optimal value." size="3" />
    <param name="minscore" value="0" type="integer" help="Leave as 0 (default) to display all novel predicted miRNAs in overview table"
      label="Minimum score cut-off for predicted novel miRNAs to be displayed in the overview table. Default 0." size="3" />
    <param name="maxprecursors" value="50000" type="integer" help="Use -1 if you want all possible precursors to be analyzed"
      label="maximum precursors when automatic excision gearing is used. Default=50000 (recommended -see miRDeep2 paper)" size="8" />
    <param name="randfold" type="boolean"  label="Run randfold analysis (see docs - takes extra time)"
      truevalue="--randfold" falsevalue="" checked="yes" help="Default = yes"/>
    <param name="makeBed" type="boolean"  label="Report all annotated and unannotated miR intervals to a BED history file"
      truevalue="--makeBed" falsevalue="" checked="No" help="This make an interval file to count reads over (eg) for edgeR DGE tests"/>
  </inputs>
  <outputs>    
    <data format="html" name="html_file" label="${input_arf.name}_${jtitle}.html"/>
    <data format="bed" name="bed_file" label="${input_arf.name}_${jtitle}_allmir.bed">
    <filter> makeBed is True </filter>
    </data>
  </outputs>
  <help>



.. class:: infomark

This Galaxy tool exposes mirdeep2_ 
from http://www.mdc-berlin.de/en/research/research_teams/systems_biology_of_gene_regulatory_elements/projects/miRDeep/index.html

This is part of a set of tools and provides comprehensive reporting of known miRbase sequences and of potentially unannotated
miR forms.

Raw miR sequence reads should first be mapped to their genome using with the miR mapper based on miRDeep2_
This will create the two matching files (collapsedfasta and arf formats respectively) needed as input to this reporting program

sam/bam format mapped reads can also be used as input here. The miRDeep2_ mapper is a specialised bowtie index based method so
may be preferred for this reporting tool although we have no empirical evidence to recommend one over any other.

You can use arf/collapsedfasta files generated by the specialised miRDEEP2 mapper tool or these can be generated from 
existing mapped bam files using the built in converter - click the pencil icon on a bam file in your history and 
choose the "Bam to Arf" converter from the drop down select list in the "Convert to new format" section - be 
patient as conversion will take a while.

For differential miR analyses, a bed (interval) file with all of the annotated and un-annotated miR found can be 
created as an additional output for downstream edgeR/DESeq analyses. Create this output using ALL samples combined,
then use the multiple bams to count matrix tool to create a count matrix from each individual sample bam with
a read count for each miR in the interval file from all samples.

(for users too lazy to seek it at miRDeep2_ text from there follows below)

**Readme**

name: miRDeep2.pl

description: Wrapper function for the miRDeep2.pl program package. The script runs all necessary scripts of the miRDeep2 package to perform a microRNA detection deep sequencing data anlysis.

input: A fasta file with deep sequencing reads, a fasta file of the corresponding genome, a file of mapped reads to the genome in miRDeep2 arf format, an optional fasta file with known 

miRNAs of the analysing species and an option fasta file of known miRNAs of related species

output: A spreadsheet and a html file with an overview of all detected miRNAs in the deep sequencing input data.

options:

-a int        minimum read stack height that triggers analysis. Using this option disables
              automatic estimation of the optimal value.
-b int        minimum score cut-off for predicted novel miRNAs to be displayed in the overview
              table. This score cut-off is by default 0.

-c            disable randfold analysis

-g int        maximum number of precursors to analyze when automatic excision gearing is used.
              default=50,000, if set to -1 all precursors will be analyzed

-t species    species being analyzed - this is used to link to the appropriate UCSC browser

-u            output list of UCSC browser species that are supported and exit

-v            remove directory with temporary files

-s file       File with known miRBase star sequences

-z tag        Additional tag appended to current time stamp

Examples:
The miRDeep2 module identifies known and novel miRNAs in deep sequencing data. The output of the mapper module can be directly plugged into the miRDeep2 module.

Example use 1:
The user wishes to identify miRNAs in mouse deep sequencing data, using default options. The miRBase_mmu_v14.fa file contains all miRBase mature mouse miRNAs, while the miRBase_rno_v14.fa file contains all the miRBase mature rat miRNAs. The '2>' will pipe all progress output to the report.log file.
miRDeep2.pl reads_collapsed.fa genome.fa reads_collapsed_vs_genome.arf miRBase_mmu_v14.fa miRBase_rno_v14.fa precursors_ref_this_species.fa -t Mouse 2>report.log
This command will generate a directory with pdfs showing the structures, read signatures and score breakdowns of novel and known miRNAs in the data, an html webpage that links to all results generated (result.html), a copy of the novel and known miRNAs contained in the webpage but in text format which allows easy parsing (result.csv), a copy of the performance survey contained in the webpage but in text format (survey.csv) and a copy of the miRNA read signatures contained in the pdfs but in text format (output.mrd). The ids in files miRBase_mmu_v14.fa and precursors_ref_this_species.fa need to be similar to each other. This is usually no problem if you downloaded both files from miRBase. Otherwise it can happen that the quantifier fails to produce results.

Example use 2:
As in example use 1, except that the user has already run quantifier.pl and wants to use this output to get information on the miRNAs not detected by miRDeep2 included in the html webpage. miRBase.mrd is a file generated by quantifier.pl:
miRDeep2.pl reads_collapsed.fa genome.fa reads_collapsed_vs_genome.arf miRBase_mmu_v14.fa miRBase_rno_v14.fa -t Mouse -q miRBase.mrd 2>report.log
This command will generate the same type of files as example use 1 above. The user wishes to identify miRNAs in deep sequencing data from an animal with no related species in miRBase:
miRDeep2.pl reads_collapsed.fa genome.fa reads_collapsed_vs_genome.arf none none none 2>report.log
This command will generate the same type of files as example use 1 above. Note that there it will in practice always improve miRDeep2 performance if miRNAs from some related species is input, even if it is not closely related.

-----

.. class:: infomark

**Copyright**

This Galaxy tool is a component of the rgenetics toolkit.

Written by and copyright Ross Lazarus, ross.lazarus at gmail etc, September 2010

All rgenetics artefacts are available licensed under the LGPL_
Other dependencies are licensed at the author's discretion - please see each individual package for details
 
 .. _LGPL: http://www.gnu.org/copyleft/lesser.html
 .. _mirdeep2: http://www.mdc-berlin.de/en/research/research_teams/systems_biology_of_gene_regulatory_elements/projects/miRDeep/index.html

  </help>
</tool>


