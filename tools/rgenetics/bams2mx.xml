<tool id="bams2mx" name="Multiple BAMs to matrix" version="0.5">
   <description>for DGE</description>
   <command interpreter="python"> 
    bams2mx.py -w "$halfwin" -b "$bedfile" -o "$outfile" -i "$ignoreDupes" -c "$countBetween" -l '$countLib' --mapqMin "$mapqMin" 
--bamf "'${firstbamf}','${firstbamf.metadata.bam_index}','${firstbamf.name}'"  --tmpdir "${__new_file_path__}" --forceName "$forceName"
#for $b in $bamfiles:
#if $b != "None"
--bamf "'${b.bamf}','${b.bamf.metadata.bam_index}','${b.bamf.name}'" 
#end if
#end for
    </command>
  <inputs>
    <param format="bed,interval" name="bedfile" type="data" label="Interval (BED file) from your current history" size="100" />
    <param name="halfwin" label="Extend bed regions by this many bases" 
      help="If &gt; 0, contigs will be extended at each end by this many nucleotides when counting overlapping reads" type="integer" value="0"/>
    <param name="mapqMin" label="Filter reads with mapq below than this value" 
    help="0 to count any mapping quality read. Otherwise only reads at or above specified mapq will be counted" 
    type="integer" value="5"/>
    <param name="title" label="Name for this job's output file" type="text" size="80" value="bams to DGE matrix"/>
    <param name="forceName" value="false" type="boolean" label="Force replacement to chr:start-offset as the name for each contig in the output"
      truevalue="true" falsevalue="false" checked="no" help="Leave as false to use the contig names as supplied in your bed file" />
    <param name="countLib" value="true" type="boolean" label="Add a 'librarySize' contig for each sample"
      truevalue="true" falsevalue="false" checked="no" help="Leave True to force edgeR to normalize read counts across all samples" />
    <param name="countBetween" value="false" type="boolean" label="Add a row (contig name= *, region= *) containing reads outside bed file contigs for normalization. False is the default. This option will usually cause edgeR to fail"
      truevalue="true" falsevalue="false" checked="no" help="Leave True to force edgeR to normalize read counts across all samples" />
    <param name="ignoreDupes" value="false" type="boolean" label="Ignore reads flagged as duplicates by upstream software if set. False is the default, recommended for RNA-seq"
      truevalue="true" falsevalue="false" checked="no" help="Controls counting of optical/pcr duplicates if flagged by upstream processing - leave alone unless you know what you are doing" />
    <param name="firstbamf" type="data" label="BAM file from your history to count reads overlapping BED regions" format="bam" />
    <repeat name="bamfiles" title="Additional BAM files from your history to count reads overlapping BED regions" min="10">
        <param name="bamf" type="data" label="Additional BAM file from your history" format="bam" size="100"/>
    </repeat>
  </inputs>
  <outputs>
    <data format="tabular" name="outfile" label="${title}_bams2mx.xls" />
  </outputs>
  <help>

**Warning**

This code will count reads overlapping contigs supplied in the bed file.
If the bed file contains a name field in column 4, it will be used as the contig name unless the "Force replacement.." option is set to true.
Otherwise, a contig name will be constructed using chr:start-end
Please note that the counts for each contig will be reported - so if you have duplicates, they will be amalgamated into a single row.
To prevent this from happening, supply a unique contig name as the 4th column of your bed file

**Note**

bams2mx is an experimental tool currently under test

There is much discussion about whether to count optical/pcr duplicates. If you set the ignore flag to True, any reads in the input BAM files marked as
duplicates by upstream processing such as the Picard MarkDuplicates tool will NOT be counted. The 'right' setting depends on your data and coverage. For extremely deep 
coverage, true duplicate reads are inevitable and ignoring them may be throwing away useful real data. In most cases, counting them is probably a reasonable
choice - any induced bias is likely to be non-differential between samples, whereas it's not at all clear whether that's the case if they are ignored. 

----

**What this tool does**

This tool takes a file containing a set of genomic regions of interest in BED format, a window size and an arbitrary
number of BAM files containing aligned sequences.

For each region in the BED file, it extends the start and end coordinates by the window size (so total length is
region + 2*windowsize), then counts and reports the number of sequences overlapping in each BED file

Optical and/or PCR duplicates marked with the is_duplicate flag in the bam files will be ignored when counting if the
ignore duplicates option is selected (default) 

The output is a tabular file containing the count matrix and suitable for downstream processing.

----

**Attribution**

bams2mx was designed and written by Antony Kaspi.

This Galaxy wrapper was written for a revised version by Ross Lazarus and is licensed under the LGPL_ like other rgenetics artefacts

.. _LGPL: http://www.gnu.org/copyleft/lesser.html

  </help>

</tool>





