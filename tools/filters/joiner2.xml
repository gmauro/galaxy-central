<tool id="joiner2" name="Relational join 2">
  <description>two Queries A specific column of which has the same value</description>
  <command>sort -k $col1 $input1 > $input1.tmp; sort -k $col2 $input2 > $input2.tmp; join -1 $col1 -2 $col2 $input1.tmp $input2.tmp | tr " " "\t" > $out_file1; rm -rf $input1.tmp $input2.tmp </command>
  <inputs>
    <page>
    <param name="input1" 	label="Combine Query1" 	format = "tabular" type="data" />
    <param name="input2" 	label="With Query2"	format = "tabular" type="data"/>
    </page>
    <page>
    <param name="col1"	label="Query 1 on column" 	size="9"	type="select" dynamic_options="get_available_columns( input1.file_name )" />
    <param name="col2"	label="Query 2 on column" 	size="9"	type="select" dynamic_options="get_available_columns( input2.file_name )" />
    </page>
  </inputs>
  <outputs>
    <data format="input" name="out_file1" metadata_source="input1" />
  </outputs>
  <code file="joiner2.py"/>
  <help>

.. class:: infomark

Joins two queries on specific colomns ( similar to the relational database join operation ).

-----

**Example**

Query 1::

   chr1 10   100  Query1.1
   chr2 500  1000 Query1.2
   chr4 1100 1250 Query1.3

Query 2::

   chr1 20   80   Query2.1
   chr2 2000 2204 Query2.2
   chr3 2500 3000 Query2.3

Join querie 1 on column 1 with query 2 on column 1 will produce::

   chr1	10	100	Query1.1	20	80	Query2.1
   chr2	500	1000	Query1.1	2000	2204	Query2.1

</help>
</tool>
