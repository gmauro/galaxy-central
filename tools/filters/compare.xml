<tool id="comp1" name="Compare two Queries">
  <description>using a specified field to find common or unique rows</description>
  <command interpreter="perl">joinWrapper.pl $input1 $input2 $field1 $field2 $mode "Y" $out_file1</command>
  <inputs>
      <param name="field1" size="2" type="integer" value="1" label="Use field" />
      <param format="tabular" name="input1" type="data" label="of Query1"/>
      <param name="field2" size="2" type="integer" value="1" label="and field"/>
      <param format="tabular" name="input2" type="data" label="of Query2"/>
      <param name="mode" type="select" label="To find" help="See examples below for explanation of these options">
        <option value="N">Matching rows of Query1</option>
        <option value="V">Not Matching rows of Query1</option>
      </param>
  </inputs>
  <outputs>
     <data format="input" name="out_file1" metadata_source="input1" />
  </outputs>
  <tests>
    <test>
      <param name="input1" value="1.bed"/>
      <param name="input2" value="2.bed"/>
      <param name="field1" value="2"/>
      <param name="field2" value="2"/>
      <param name="mode" value="N"/>
      <output name="out_file1" file="fs-compare.dat"/>
    </test>
  </tests>
  <help>

.. class:: infomark

**TIP:** If your data is not TAB delimited, use *Edit Queries-&gt;Convert characters*

-----

**Syntax**

This tool finds lines in one query that HAVE or DO NOT HAVE a common field with another query.

- Columns are referenced with a **number**. For example, **3** refers to the 3rd column of a tab-delimited file.

-----

**Example**

Query1::

  chr1 10 20 geneA 
  chr1 50 80 geneB
  chr5 10 40 geneL

Query2::

  geneA tumor-supressor
  geneB Foxp2
  geneC Gnas1
  geneE INK4a

Finding lines in Query1 whose 4th column matching the 1st column of Query2::

  chr1 10 20 geneA 
  chr1 50 80 geneB

Converesely, using options **Not Matching rows of Query1** on same fields will yield::

  chr5 10 40 geneL

</help>
</tool>
