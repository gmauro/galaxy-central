<tool id="maf_stats1" name="MAF Coverage Stats">
  <description>Alignment coverage information</description>
  <command interpreter="python2.4">
maf_stats.py
#if $maf_source_type.maf_source == "user":
$maf_source_type.maf_source $input2 $input1 $out_file1 $dbkey $input1_chromCol $input1_startCol $input1_endCol
#else:
$maf_source_type.maf_source $maf_source_type.mafType $input1 $out_file1 $dbkey $input1_chromCol $input1_startCol $input1_endCol
#end if
  </command>
  <inputs>
    <page>
        <param format="interval" name="input1" label="Interval File" type="data"/>
    </page>
    <page>
        <conditional name="maf_source_type">
            <param name="maf_source" type="select" label="MAF Source">
              <option value="cached" selected="true">Locally Cached Alignments</option>
              <option value="user">Alignments in Your History</option>
            </param>
            <when value="user">
                <param format="maf" name="input2" label="MAF File" type="data"/>
            </when>
            <when value="cached">
                <param name="mafType" label="MAF Type" type="select" dynamic_options="get_available_data( input1.dbkey )"/>
            </when>
        </conditional>
    </page>
   </inputs>
  <outputs>
    <data format="interval" name="out_file1" metadata_source="input1"/>
  </outputs>
  <tests>
    <test>
      <param name="input1" value="1.bed" dbkey="hg17" format="bed"/>
      <param name="maf_source" value="cached"/>
      <param name="mafType" value="8_WAY_MULTIZ_hg17"/>
      <output name="out_file1" file="maf_stats_interval_out.dat"/>
    </test>
  </tests>
  <help>

**What it does**

This tool takes a MAF file and an interval file and relates coverage information by interval for each species.
If a column does not exist in the reference genome, it is not included in the output.

Consider the interval: "chrX 1000 1100 myInterval"
  Let's suppose we want to do stats on three way alignments for H, M, and R. The result look like this:

    chrX 1000 1100 myInterval H XXX YYY 
    
    chrX 1000 1100 myInterval M XXX YYY 
    
    chrX 1000 1100 myInterval R XXX YYY 
    

  where XXX and YYY are:

    XXX = number of nucleotides
    
    YYY = number of gaps


  </help>
  <code file="maf_stats_code.py"/>
</tool>
