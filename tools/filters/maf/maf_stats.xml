<tool id="maf_stats1" name="Alignment Coverage Statistics">
  <description>for a set of genomic intervals</description>
  <command interpreter="python2.4">maf_stats.py $input1 $input2 $out_file1 $dbkey $input2_chromCol $input2_startCol $input2_endCol</command>
  <inputs>
    <page>
        <param format="interval" name="input2" label="Interval File" type="data"/>
        <param format="maf" name="input1" label="MAF File" type="data"/>
    </page>
   </inputs>
  <outputs>
    <data format="interval" name="out_file1" metadata_source="input2"/>
  </outputs>
  <tests>
    <test>
      <param name="input1" value="4.maf" dbkey="hg17"/>
      <param name="input2" value="maf_stats_interval_in.dat" dbkey="hg17" format="bed"/>
      <output name="out_file1" file="maf_stats_interval_out.dat"/>
    </test>
  </tests>
  <help>

**What It Does**

This tool takes two inputs: (1) a list of genomic intervals and (2) alignments in MAF format. For interval it computes the number of bases and gaps in the corresponding alignment. 

.. class:: infomark

**TIP**: To create a set of alignments corresponding to a set of your genomic intervals first use the **Extract MAF blocks from locally cached alignments** tool.

------

**Example**

Consider the interval::
 
  chrX 1000 1100 myInterval

And three way multiple alignments that includes hg18 (human), mm7 (mouse), and canFam2 (dog).  The output will look like this (it contains three rows because the output is produced for each species in the alignment. In this case the alignment contains three species)::

  chrX 1000 1100 myInterval hg18    XXX YYY 
  chrX 1000 1100 myInterval mm7     XXX YYY 
  chrX 1000 1100 myInterval canFam2 XXX YYY 
    
where XXX and YYY are:
  
 *  XXX = number of bases within the interval covered by **nucleotides** in the alignment;
 *  YYY = number of bases within the interval covered by **gaps** in the alignemnts.
 

  </help>
</tool>
