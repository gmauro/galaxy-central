<tool id="MAF_To_BED1" name="Maf to BED">
    <description>Converts a MAF formated file to the BED format</description>
    <command interpreter="python2.4">maf_to_bed.py $input1 $out_file1 $species $complete_blocks</command>
    <inputs>
        <page>
            <param format="maf" name="input1" type="data" label="MAF file"/>
        </page>
        <page>
            <param name="species" type="select" label="Species to extract" dynamic_options="get_available_species( input1.dbkey, input1.file_name )" display="checkboxes" multiple="true"/>
            <param name="complete_blocks" type="select">
              <label>Exclude blocks which have a requested species missing</label>
              <option value="partial_allowed">No</option>
              <option value="partial_disallowed">Yes</option>
            </param>
        </page>
    </inputs>
    <outputs>
        <data format="bed" name="out_file1" />
    </outputs>
    <tests>
      <test>
        <param name="input1" value="4.maf"/>
        <param name="species" values="hg17"/>
        <param name="complete_blocks" value="partial_disallowed"/>
        <output name="out_file1" file="cf_maf_to_bed.dat"/>
      </test>
    </tests>
    <help>

**Syntax**

This tool converts a MAF formated file to the BED format, a specific interval format.

- **MAF format** multiple alignment format file. This format stores multiple alignments at the DNA level between entire genomes. 

  - The .maf format is line-oriented. Each multiple alignment ends with a blank line.
  - Each sequence in an alignment is on a single line.
  - Lines starting with # are considered to be comments.
  - Each multiple alignment is in a separate paragraph that begins with an "a" line and contains an "s" line for each sequence in the multiple alignment.
  - Some MAF files may contain two optional line types: 

    - An "i" line containing information about what is in the aligned species DNA before and after the immediately preceding "s" line; 
    - An "e" line containing information about the size of the gap between the alignments that span the current block.

- **BED format** Browser Extensible Data format was designed at UCSC for displaying data tracks in the Genome Browser. It has three required fields and twelve additional optional ones::

    The first three BED fields (required) are:
    1. chrom - The name of the chromosome (e.g. chr1, chrY_random).
    2. chromStart - The starting position in the chromosome. (The first base in a chromosome is numbered 0.)
    3. chromEnd - The ending position in the chromosome, plus 1 (i.e., a half-open interval).

    Additional (optional) fields are:
    4. name - The name of the BED line.
    5. score - A score between 0 and 1000.
    6. strand - Defines the strand - either '+' or '-'.

-----

**Example**

- MAF format::

    ##maf version=1 scoring=multiz.v7
    # multiz.v7 R=10 M=0 /cluster/bluearc/hg17/multiz.2004-07-13/danRer1/chrY.maf /cluster/bluearc/hg17/multiz.2004-07-13/panTro1mm5rn3canFam1galGal2fr1/chrY.maf -

    a score=236.0
    s hg17.chrY          3757 13 +  57701691 GATCCACTGTTCC
    s galGal2.chrUn 101379810 13 + 165033910 GCCCCGCTCACCC

    a score=418.0
    s hg17.chrY          3770 3 +  57701691 TGT
    s galGal2.chrUn 101379823 3 + 165033910 TTT
    s danRer1.chrUn 354601716 3 + 367113659 TGT

- Convert the above file to BED format for hg17::

    chrY	3757	3770	hg17_0	0	+
    chrY	3770	3773	hg17_1	0	+


    </help>
    <code file="maf_to_bed_code.py"/>
</tool>

