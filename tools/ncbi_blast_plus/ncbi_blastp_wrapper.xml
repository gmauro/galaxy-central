<tool id="ncbi_blastp_wrapper" name="NCBI BLAST+ blastp" version="0.0.1">
    <description>Search protein database with protein query sequence(s)</description>
    <command>
      blastp
       -query "$query"
#if $db_opts.db_opts_selector == "db":
       -db "$db_opts.database"
#else:
       -subject "$db_opts.subject"
#end if
       -task $blast_type
       -evalue $evalue_cutoff
       $adv_opts.filter_query
       $adv_opts.matrix
       -out $output1
       -outfmt $out_format
       -num_threads 8
    </command>
    <inputs>
        <param name="query" type="data" format="fasta" label="Protein query sequence(s)"/> 
        <conditional name="db_opts">
            <param name="db_opts_selector" type="select" label="Subject database/sequences">
              <option value="db" selected="True">BLAST Database</option>
              <option value="file">FASTA file</option>
            </param>
            <when value="db">
                <param name="database" type="select" label="Protein BLAST database">
                    <options from_file="blastdb_p.loc">
                      <column name="name" index="0"/>
                      <column name="value" index="1"/>
                    </options>
                </param>
                <param name="subject" type="hidden" value="" /> 
            </when>
            <when value="file">
                <param name="database" type="hidden" value="" /> 
                <param name="subject" type="data" format="fasta" label="Protein FASTA file to use as database"/> 
            </when>
        </conditional>
        <param name="blast_type" type="select" display="radio" label="Type of BLAST">
            <option value="blastp">blastp</option>
            <option value="blastp-short">blastp-short</option>
        </param>
        <param name="evalue_cutoff" type="float" size="15" value="0.001" label="set expectation value cutoff" />
        <param name="out_format" type="select" label="Output format">
            <option value="6">Tabular</option>
            <option value="5">BLAST XML</option>
            <option value="0">Pairwise text</option>
            <!--
            <option value="11">BLAST archive format (ASN.1)</option>
            -->
        </param>
        <conditional name="adv_opts">
            <param name="adv_opts_selector" type="select" label="Advanced Options">
              <option value="basic" selected="True">Hide Advanced Options</option>
              <option value="advanced">Show Advanced Options</option>
            </param>
            <when value="basic">
                <param name="filter_query" type="hidden" value="" />
                <param name="matrix" type="hidden" value="" />
            </when>
            <when value="advanced">
                <!-- Could use a select (yes, no, other) where other allows setting 'window locut hicut' -->
                <param name="filter_query" type="boolean" label="Filter out low complexity regions (with SEG)" truevalue="-seg yes" falsevalue="-seg no" checked="true" />
                <param name="matrix" type="select" label="Scoring matrix">
                    <option value="-matrix BLOSUM90">BLOSUM90</option>
                    <option value="-matrix BLOSUM80">BLOSUM80</option>
                    <option value="-matrix BLOSUM62" selected="true">BLOSUM62 (default)</option>
                    <option value="-matrix BLOSUM50">BLOSUM50</option> 
                    <option value="-matrix BLOSUM45">BLOSUM45</option>
                    <option value="-matrix PAM250">PAM250</option>
                    <option value="-matrix PAM70">PAM70</option>
                    <option value="-matrix PAM30">PAM30</option>
                </param>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output1" format="tabular" label="${blast_type.value_label} on ${db_opts.db_opts_selector}">
            <change_format>
                <when input="out_format" value="0" format="txt"/>
            </change_format>
            <change_format>
                <when input="out_format" value="5" format="blastxml"/>
            </change_format>
        </data>
    </outputs>
    <requirements>
        <requirement type="binary">blastn</requirement>
    </requirements>
    <tests>
    </tests>
    <help>
    
.. class:: warningmark

**Note**. Database searches may take substantial amount of time.
For large input datasets it is advisable to allow overnight processing.  

-----

**What it does**

Search a *protein database* using a *protein query*,
using the NCBI BLAST+ blastp command line tool.

-----

**Output format**

The default output of this tool is tabular, containing 12 columns:

1. Id of your sequence 
2. GI of the database hit 
3. % identity
4. Alignment length
5. # mismatches
6. # gaps
7. Start position in your sequence
8. End position in your sequence
9. Start position in database hit
10. End position in database hit
11. E-value
12. Bit score

-------

**References**

Altschul et al. Gapped BLAST and PSI-BLAST: a new generation of protein database search programs. 1997. Nucleic Acids Res. 25:3389-3402.

Schaffer et al. Improving the accuracy of PSI-BLAST protein database searches with composition-based statistics and other refinements. 2001. Nucleic Acids Res. 29:2994-3005.

    </help>
</tool>
