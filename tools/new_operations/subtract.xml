<tool id="gops_subtract_1" name="Subtract">
  <description>the intervals of two queries</description>
  <command interpreter="python">gops_subtract.py 
      #if $inputs.type == "BED":
            $inputs.bed_input1 $inputs.bed_input2 $output 
            -1 ${inputs.bed_input1.metadata.chromCol},${inputs.bed_input1.metadata.startCol},${inputs.bed_input1.metadata.endCol},${inputs.bed_input1.metadata.strandCol} 
            -2 ${inputs.bed_input2.metadata.chromCol},${inputs.bed_input2.metadata.startCol},${inputs.bed_input2.metadata.endCol},${inputs.bed_input2.metadata.strandCol} 
      #else
          $inputs.gff_input1 $inputs.gff_input2 $output
          ## TODO: can we use metadata like above to set these columns rather than hardcode them?
          -1 1,4,5,7
          -2 1,4,5,7
          --gff
      #end if
      -m $min $returntype
  </command>
  <inputs>
      <conditional name="inputs">
          <param name="type" type="select" label="File Format to Use">
            <option value="BED">BED</option>
            <option value="GFF">GFF</option>
          </param>
          <when value="BED">
            <param format="interval" name="bed_input2" type="data" help="Second query">
              <label>Subtract</label>
            </param>
    
            <param format="interval" name="bed_input1" type="data" help="First query">
              <label>from</label>
            </param>
        </when>
        <when value="GFF">
            <param format="gff" name="gff_input2" type="data" help="Second query">
              <label>Subtract</label>
            </param>
    
            <param format="gff" name="gff_input1" type="data" help="First query">
              <label>from</label>
            </param>
        </when>
    </conditional>

<param name="returntype" type="select" label="Return" help="of the first query (see figure below)">
      <option value="">Intervals with no overlap</option>
      <option value="-p">Non-overlapping pieces of intervals</option>
    </param>
    
    <param name="min" size="4" type="integer" value="1" help="(bp)">
      <label>where minimal overlap is</label>
    </param>

   </inputs>
  <outputs>
    <data format="input" name="output">
        #if inputs.type == "BED":
            metadata_source="inputs.bed_input1"
        #else:
            metadata_source="inputs.gff_input1"
        #end if
    </data>
  </outputs>
  <code file="operation_filter.py"/>
  <tests>
    <test>
      <param name="type"  value="BED"/>    
      <param name="bed_input1" value="1.bed" />
      <param name="bed_input2" value="2.bed" />
      <param name="min" value="1" />
      <param name="returntype" value="" />
      <output name="output" file="gops-subtract.dat" />
    </test>
    <test>
      <param name="type"  value="BED"/>
      <param name="bed_input1" value="1.bed" />
      <param name="bed_input2" value="2_mod.bed" ftype="interval"/>
      <param name="min" value="1" />
      <param name="returntype" value="" />
      <output name="output" file="gops_subtract_diffCols.dat" />
    </test>
    <test>
      <param name="type"  value="BED"/>
      <param name="bed_input1" value="gops_subtract_bigint.bed" />
      <param name="bed_input2" value="2.bed" />
      <param name="min" value="1" />
      <param name="returntype" value="" />
      <output name="output" file="gops-subtract.dat" />
    </test>
    <test>
      <param name="type"  value="BED"/>
      <param name="bed_input1" value="1.bed" />
      <param name="bed_input2" value="2.bed" />
      <param name="min" value="10" />
      <param name="returntype" value="Non-overlapping pieces of intervals" />
      <output name="output" file="gops-subtract-p.dat" />     
    </test>
    <test>
        <param name="type"  value="GFF"/>
        <param name="gff_input1" value="gops_subtract_in1.gff" />
        <param name="gff_input2" value="gops_subtract_in2.gff" />
        <param name="min" value="1" />
        <param name="returntype" value="" />
        <output name="output" file="gops_subtract_out1.gff" />        
    </test>
  </tests>
  <help>

.. class:: infomark

**TIP:** If your query does not appear in the pulldown menu, it means that it is not in interval format. Use "edit attributes" to set chromosome, start, end, and strand columns.

-----

**Screencasts!**

See Galaxy Interval Operation Screencasts_ (right click to open this link in another window).

.. _Screencasts: http://bitbucket.org/galaxy/galaxy-central/wiki/GopsDesc

-----

**Syntax**

- **Where overlap is at least** sets the minimum length (in base pairs) of overlap between elements of the two queries.
- **Intervals with no overlap** returns entire intervals from the first query that do not overlap the second query.  The returned intervals are completely unchanged, and this option only filters out intervals that overlap with the second query.
- **Non-overlapping pieces of intervals** returns intervals from the first query that have the intervals from the second query removed.  Any overlapping base pairs are removed from the range of the interval.  All fields besides start and end are guaranteed to remain unchanged.

-----

**Example**

.. image:: ../static/operation_icons/gops_subtract.gif

</help>
</tool>