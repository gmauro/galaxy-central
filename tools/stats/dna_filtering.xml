<tool id="dna_filter" name="DNA Filter" version="1.0.0">
  <description>filter column data on DNA ambiguity codes using simple expressions</description>
  <command interpreter="python">
    dna_filtering.py
      --input=$input 
      --output=$out_file1 
      --cond="$cond" 
      --n_handling=$n_handling
      --columns=${input.metadata.columns} 
      --col_types="${input.metadata.column_types}"
  </command>
  <inputs>
    <param format="tabular" name="input" type="data" label="Filter" help="Query missing? See TIP below."/>
    <param name="cond" size="40" type="text" value="c8=='G'" label="With following condition" help="Double equal signs, ==, must be used as shown above. To filter for an arbitrary string, use the Select tool.">
      <validator type="empty_field" message="Enter a valid filtering condition, see syntax and examples below."/>
    </param>
    <param name="n_handling" type="select" label="Do you want N (and X) to match A or C or G or T OR nothing?">
      <option value="all">N = A or C or G or T</option>
      <option value="none">N = nothing</option>
    </param>
  </inputs>
  <outputs>
    <data format="input" name="out_file1" metadata_source="input"/>
  </outputs>
  <tests>
    <test>
      <param name="input" value="dna_filter_in1.bed" />
      <param name="cond" value="c8=='G'" />
      <param name="n_handling" value="all" />
      <output name="out_file1" file="dna_filter_out1.bed" />
    </test>
    <test>
      <param name="input" value="dna_filter_in1.bed" />
      <param name="cond" value="(c10==c11 or c17==c18) and c6!='C' and c23=='R'" />
      <param name="n_handling" value="all" />
      <output name="out_file1" file="dna_filter_out2.bed" />
    </test>
    <test>
      <param name="input" value="dna_filter_in1.bed" />
      <param name="cond" value="c4=='B' or c9==c10" />
      <param name="n_handling" value="none" />
      <output name="out_file1" file="dna_filter_out3.bed" />
    </test>
    <test>
      <param name="input" value="dna_filter_in1.bed" />
      <param name="cond" value="c7!='Y' and c9!='U'" />
      <param name="n_handling" value="none" />
      <output name="out_file1" file="dna_filter_out4.bed" />
    </test>
  </tests>
  <help>

.. class:: warningmark

Double equal signs, ==, must be used as *"equal to"* (e.g., **c1 == 'G'**)

.. class:: infomark

**TIP:** If your data is not TAB delimited, use *Text Manipulation-&gt;Convert*

.. class:: infomark

**TIP:** This tool is intended primarily for comparing column values (such as "c5==c12"), although it is also possible to filter on specific values (like "c6!='G'"). Be aware that when searching for specific values, any possible match is considered. So if you search on "c6!='G'", rows will be excluded when c6 is G, K, R, S, B, V, or D (plus N or X if you set that to equal "all"), because it is possible those values could be G. 

-----

**Syntax**

The filter tool allows you to restrict the dataset using simple conditional statements.

- Columns are referenced with **c** and a **number**. For example, **c1** refers to the first column of a tab-delimited file
- Make sure that multi-character operators contain no white space ( e.g., **!=** is valid while **! =** is not valid )
- When using 'equal-to' operator **double equal sign '==' must be used** ( e.g., **c1=='chr1'** )
- Non-numerical values must be included in single or double quotes ( e.g., **c6=='C'** )
- Filtering condition can include logical operators, but **make sure operators are all lower case** ( e.g., **(c1!='chrX' and c1!='chrY') or c6=='+'** )

-----

**DNA Codes**

The following are the DNA codes used for filtering::

  Code        Meaning
  ----   ---------------------------
   A            A
   T            T
   U            T
   G            G
   C            C
   K          G or T
   M          A or C
   R          A or G
   Y          C or T
   S          C or G
   W          A or T
   B         C, G or T
   V         A, C or G
   H         A, C or T
   D         A, G or T
   X        A, C, G or T
   N        A, C, G or T
   .     not (A, C, G or T)
   -     gap of indeterminate length

-----

**Example**

- **c8=='A'** selects lines in which the eighth column is A, M, R, W, V, H, D and N or X if appropriate
- **c12==c15** selects lines where the value in the twelfth column could be the same as the fifteenth and the fifteenth column could be the same as the twelfth column (based on appropriate codes)
- **c9!=c19** selects lines where column nine could not be the same as column nineteen and column nineteen could not be the same as column nine (using appropriate codes)

</help>
</tool>
