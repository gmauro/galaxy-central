<tool id="find_clusters_mysql" name="Find Clusters">
  <description> search for clusters(specific combination of patterns in a window size) on a genome</description>
  <command interpreter="python2.4">findcluster_mysql.py -g $dbkey -x $flag -c $chroms -f $positions -b $input1 -r $range -p $patterns -w $wsize  -o $out_file1 -i $out_file2 -l $out_file3</command>
  <inputs>
    <page>
        <param name="dbkey" label="Genome" type="select" dynamic_options="get_available_data_genomes( )"/>
    </page>
    <page>
        <param name="flag" label="Find cluster in: " type="select" display="checkboxes" multiple="True">
	   <option value="c">Chroms</option> 
	   <option value="f">Blocks in the input box</option> 
	   <option value="b">Blocks in the bed file</option> 
	</param>
        <param name="chroms" label="Chroms" type="select" dynamic_options="get_available_data_chroms( dbkey )" display="checkboxes" multiple="true" />
	<param name="positions" type="text" area="true" size="4x35" value="" label="Blocks" />
	<param name="input1" format="bed" type="data" label="Blocks in the bed file"/>
        <param name="range" size="10" type="integer" value="0" label="Block range"/>
	<param name="patterns" type="text" area="true" size="8x35" value="" label="Patterns" />
        <param name="wsize" size="10" type="integer" value="3500" label="window size"/>
    </page>
   </inputs>
  <outputs>
    <data format="bed" type="data" name="out_file1" />
    <data format="tabular" name="out_file2" />
    <data format="text" name="out_file3" />
  </outputs>
  <code file="findcluster_mysql_subs.py"/>
  <help>


.. |INFO| image:: ../static/images/icon_info_sml.gif

-----

**Syntax**

This tool uses a combined method (suffix-header approach and database support) to find clusters of patterns. 

-----

**The steps** are:

1. Select 'Genome' and click on 'Next step' button;
2. Select 'Available Chroms'(default: all);
3. Or you can search cluster on blocks of the chromosomes. E.g. chr2L:110020-0. Note: if the second number is 0, it means 'end'. 
4. Input 'Patterns': patterns and occurrences in cluster. Here is a simple example: ARWYAKGCAART,1,YRTGRGAR,2,TGGYAATTW,1,GCCSSRGGV,2,
5. Input 'window size' for the cluster;
6. Click on 'Execute' button to run the tool.

-----

**Example**

.. image:: ../static/patmat/findcluster.png

-----

**The outputs and display in ucsc genome browser**

1. The results are 3 files: 1)a bed format file of the clusters, 2)statistic file, 3)running log. 
2. To display the bed format file of result clusters in genome browser, click on 'display at UCSC main'.
</help>
</tool>
